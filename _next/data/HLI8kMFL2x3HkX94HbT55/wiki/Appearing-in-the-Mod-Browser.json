{"pageProps":{"data":{"contentHtml":"<h1 id=\"disclaimers\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#disclaimers\"><span class=\"icon icon-link\"></span></a>Disclaimers</h1>\n<p><strong>There will be a 0 strike policy for inappropriate content on the Mod Browser. This includes but is not limited to:</strong></p>\n<ul>\n<li>Content that violates Ninja Kiwi's terms of service</li>\n<li>Content whose only purpose is hacking / cheating progression within the game</li>\n<li>Content not appropriate for all ages</li>\n<li>Content promoting hatred / discrimination</li>\n<li><strong>Content that attempts to bypass purchase requirements for DLC</strong></li>\n</ul>\n<p><em>This is the Monkey vs Balloon game we're talking about here people</em></p>\n<p>An unverified modder that posts this content will have their GitHub account blacklisted. A verified modder will lose their verification status and possibly get blacklisted depending on severity.</p>\n<p>If too many violations occur to be reasonably dealt with, the option for users to see unverified content at all will be removed.</p>\n<h1 id=\"requirements\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#requirements\"><span class=\"icon icon-link\"></span></a>Requirements</h1>\n<p><strong>Showing up in the Mod Browser requires two major things on your end, and one thing on the user's end</strong></p>\n<ul>\n<li>Having your mod in a public GitHub Repository that has the <code class=\"hljs\">btd6-mod</code> topic applied to it</li>\n<li>Having a correctly formatted <code class=\"hljs\">ModHelperData</code> file accessible at the top level of your repository</li>\n<li>If you're not a verified modder on either of the two major BTD6 modding Discord servers, the user will need to have manually enabled the \"Show Unverified Mod Browser Content\" setting</li>\n</ul>\n<p>For it to be a valid <code class=\"hljs\">ModHelperData</code> file, it must either:</p>\n<ol>\n<li>Be <code class=\"hljs\">ModHelperData.json</code> a json file (optionally embedded in your project) that defined the <code class=\"hljs\">ModHelperData</code> fields in a standard one level json object like</li>\n</ol>\n<pre><code class=\"hljs language-json5\"><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">\"Name\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"Template Mod\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"Description\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"An empty mod\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-comment\">// ...</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<ol start=\"2\">\n<li>Be <code class=\"hljs\">ModHelperData.cs</code>, a source code file you compile with your mod that defines the <code class=\"hljs\">ModHelperData</code> fields as <code class=\"hljs\">const</code>s like</li>\n</ol>\n<pre><code class=\"hljs language-cs\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">TemplateMod</span>;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ModHelperData</span>\n{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> Name = <span class=\"hljs-string\">\"Template Mod\"</span>;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> Description = <span class=\"hljs-string\">\"An empty mod\"</span>;\n    ...\n}\n</code></pre>\n<ol start=\"3\">\n<li>Be <code class=\"hljs\">ModHelperData.txt</code>, using the same parsing as *.cs but not pretending to be a source code file if you're not using it as one. You can even simplify the fields to be like</li>\n</ol>\n<pre><code class=\"hljs language-ini\"><span class=\"hljs-attr\">Name</span> = <span class=\"hljs-string\">\"Template Mod\"</span>\n<span class=\"hljs-attr\">Description</span> = <span class=\"hljs-string\">\"An empty mod\"</span>\n...\n</code></pre>\n<details><summary>Regex Parsings for *.cs and *.txt if you want to manually check</summary>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-type\">SemVerRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"(?:<span class=\"hljs-subst\">\\\\</span>d+)(?><span class=\"hljs-subst\">\\\\</span>.(?:<span class=\"hljs-subst\">\\\\</span>d+))?(?><span class=\"hljs-subst\">\\\\</span>.(?:<span class=\"hljs-subst\">\\\\</span>d+))?(?><span class=\"hljs-subst\">\\\\</span>-(?:[0-9A-Za-z<span class=\"hljs-subst\">\\\\</span>-<span class=\"hljs-subst\">\\\\</span>.]+))?(?><span class=\"hljs-subst\">\\\\</span>+(?:[0-9A-Za-z<span class=\"hljs-subst\">\\\\</span>-<span class=\"hljs-subst\">\\\\</span>.]+))?\"</span>;\n<span class=\"hljs-type\">VersionRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bVersion<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(\"</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-type\">SemVerRegex</span> <span class=\"hljs-operator\">+</span> <span class=\"hljs-string\">\")<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">NameRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bName<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">DescRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bDescription<span class=\"hljs-subst\">\\\\</span>s*=(?:[<span class=\"hljs-subst\">\\\\</span>s+]*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>)+;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">IconRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bIcon<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+<span class=\"hljs-subst\">\\\\</span>.png)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">DllRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bDllName<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+<span class=\"hljs-subst\">\\\\</span>.dll)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">RepoNameRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bRepoName<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">RepoOwnerRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bRepoOwner<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">ManualDownloadRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bManualDownload<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*(false|true);?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">ZipRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bZipName<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\\</span>.zip<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">AuthorRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bAuthor<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n<span class=\"hljs-type\">SubPathRegex</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">\\\\</span>bSubPath<span class=\"hljs-subst\">\\\\</span>s*=<span class=\"hljs-subst\">\\\\</span>s*<span class=\"hljs-subst\">\\\"</span>(.+)<span class=\"hljs-subst\">\\\"</span>;?[<span class=\"hljs-subst\">\\n</span><span class=\"hljs-subst\">\\r</span>]+\"</span>;\n</code></pre>\n</details>\n<p>If you do use the *.cs way, you can also then directly use the values in your MelonInfoAttribute, so you only have to keep track of them in one place</p>\n<pre><code class=\"hljs language-cs\">[<span class=\"hljs-meta\">assembly: MelonInfo(typeof(YourMod), ModHelperData.Name, ModHelperData.Version, ModHelperData.RepoOwner)</span>]\n</code></pre>\n<h2 id=\"modhelperdata-fields\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#modhelperdata-fields\"><span class=\"icon icon-link\"></span></a>ModHelperData fields</h2>\n<h3 id=\"required\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#required\"><span class=\"icon icon-link\"></span></a>Required</h3>\n<p><code class=\"hljs\">Name</code> (string): The displayed name of your mod, as you'd like it to appear in screens like the Mod Menu and Mod Browser</p>\n<p><code class=\"hljs\">Version</code> (string): The current version of your mod. Must follow proper <a href=\"https://semver.org/\">semantic versioning</a> guidelines for updating to work.</p>\n<p><code class=\"hljs\">RepoName</code> (string) and <code class=\"hljs\">RepoOwner</code> (string): Must match the GitHub repo that your hosting the mod at, and are used in game to determine mod updates through the GitHub API.</p>\n<p><code class=\"hljs\">WorksOnVersion</code> (string): As of BTD6 v34 and the switch to MelonLoader 6.0, a string value is required here that's semantically at/above \"34\" to signify that your mod is compatible with the latest versions of the game. Usage of this field may expand in the future, so it's recommended to keep it relatively up to date it alongside your ModHelperData.</p>\n<h3 id=\"optional\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#optional\"><span class=\"icon icon-link\"></span></a>Optional</h3>\n<p><code class=\"hljs\">Description</code> (string): The description of your mod. If not included, the GitHub repo's description will be used.</p>\n<p><code class=\"hljs\">Icon</code> (string): Icon to use for your mod, including the file extension and any /s needed to find the icon from the top level of your repository. File must be under .5 MB. If not set, will check for \"Icon.png\" at the top level of the repository.</p>\n<p><code class=\"hljs\">DllName</code> (string): If your .dll file is a different name than your Assembly name, include that information here (extension included).</p>\n<p><code class=\"hljs\">Author</code> (string): If you want something different to show up as the Author of your mod than the <code class=\"hljs\">RepoOwner</code>, define that here.</p>\n<p><code class=\"hljs\">ManualDownload</code> (bool): If your release asset to be downloaded through users' browser rather than trying to download the release asset in game.</p>\n<p><code class=\"hljs\">ZipName</code> (string): If you want to upload your mod DLL inside a zip file, specify the correct name of the zip file (extension included) here. NOTE: If you do not include a DllName to look for inside the zip, it will override to being <code class=\"hljs\">ManualDownload</code>. If you have multiple files / folders needing to be downloaded in your Zip, it will need to be a <code class=\"hljs\">ManualDownload</code> one way or another based on current Mod Helper capability.</p>\n<p><code class=\"hljs\">SquareIcon</code> (bool): Makes your icon draw as constrained within panels rather than being allowed to slightly overflow.</p>\n<p><code class=\"hljs\">SubPath</code> (string): See Experimental: MonoRepo support below</p>\n<p><code class=\"hljs\">Dependencies</code> (string): Comma separated list of strings for what other dependencies from the Mod Browser this mod has (other than Mod Helper). Reference mods using the \"owner/repository\" format, using the GitHub owner name (not the mod's display Author) and the GitHub repository name (not the mod's display name). Example: \"doombubbles/paths-plus-plus\" or  \"doombubbles/paths-plus-plus,doombubbles/ultimate-crosspathing\"</p>\n<h2 id=\"updating\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#updating\"><span class=\"icon icon-link\"></span></a>Updating</h2>\n<p>If an installed mod has <code class=\"hljs\">ModHelperData.cs</code> in their code or <code class=\"hljs\">ModHelperData.json</code> / <code class=\"hljs\">ModHelperData.txt</code> included as an embedded resource, it will be used to populate that mods information in the Mods Screen.</p>\n<p>If it has both a valid <code class=\"hljs\">RepoOwner</code> and <code class=\"hljs\">RepoName</code>, it will check the mod's current version against the version specified in that Repo's <code class=\"hljs\">ModHelperData</code>. If it's an update, this will be indicated to the user and they will then have the option to fetch the latest GitHub release for the repository. The title and message of this release will be shown to the user and, if they accept, they'll download the release artifact specified by <code class=\"hljs\">DllName</code> or <code class=\"hljs\">ZipName</code> or just the first dll file included.</p>\n<p>Users will be warned if the Tag used for release does not match the version you specified. This may happen during the hopefully brief window of time between you making the commit that edits your <code class=\"hljs\">ModHelperData</code> and the release of your new version.</p>\n<h2 id=\"experimental-monorepo-support\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#experimental-monorepo-support\"><span class=\"icon icon-link\"></span></a>Experimental: <a href=\"https://en.wikipedia.org/wiki/Monorepo\">Monorepo</a> support</h2>\n<p>Many modders have ended up making a ton of mods and host all of them within one GitHub repository. I, doombubbles, did this myself to start out with and have since regretted it, as I was just doing it to mimic what others were doing and I no longer think the monorepo structure makes sense all things considered for multiple independent mods. Still, I wanted to add rudimentary support for existing monorepos, even though I myself am migrating my mods out of one.</p>\n<p>To set up a Mono Repo:</p>\n<ul>\n<li>Use the <code class=\"hljs\">btd6-mods</code> GitHub topic instead of <code class=\"hljs\">btd6-mod</code></li>\n<li>Have a <code class=\"hljs\">ModHelperMods.json</code> at the top of your repository that is simply an array of strings which are either the exact names of valid <code class=\"hljs\">ModHelperData</code> files at the top level of the repo, or names of folders that contain a <code class=\"hljs\">ModHelperData</code>.</li>\n</ul>\n<p>All the <code class=\"hljs\">ModHelperData</code> files must then:</p>\n<ul>\n<li>Include a <code class=\"hljs\">SubPath</code> field that exactly matches the entry in <code class=\"hljs\">ModHelperMods.json</code> that points at it</li>\n<li>Include the <code class=\"hljs\">DllName</code> field to specify the exact file name to look for at the same level as the <code class=\"hljs\">ModHelperData</code></li>\n</ul>\n<p>See <a href=\"https://github.com/doombubbles/test-btd6-monorepo\">here</a> for an example of both methods at once</p>\n<p>Instead of showing users the latest release message when downloading a new version, it will show the commit message of the most recent commit which changed the DLL file.</p>\n<p>The GitHub stars that a monorepo has will be split among the mods it holds, with a \"+\" indicator afterward in the Mod Browser. No, this isn't fully fair, but neither is giving all the mods all of the stars, and at this point I'd rather incentivize separate repos over monorepos.</p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#disclaimers\">Disclaimers</a></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#requirements\">Requirements</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#modhelperdata-fields\">ModHelperData fields</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#required\">Required</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#optional\">Optional</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#updating\">Updating</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#experimental-monorepo-support\">Experimental: Monorepo support</a></li></ol></li></ol></nav>","title":"Appearing in the Mod Browser"},"sidebar":{"contentHtml":"<h5 id=\"home\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#home\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Home\">Home</a></h5>\n<h5 id=\"install-guide\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#install-guide\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Install-Guide\">Install Guide</a></h5>\n<h6 id=\"starting-btd-modding\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#starting-btd-modding\"><span class=\"icon icon-link\"></span></a>Starting BTD Modding</h6>\n<p><a href=\"/wiki/Prerequisites\">Prerequisites</a></p>\n<p><a href=\"/wiki/Getting-Started\">Getting Started</a></p>\n<h6 id=\"mod-helper-features\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-features\"><span class=\"icon icon-link\"></span></a>Mod Helper Features</h6>\n<p><a href=\"/wiki/Making-a-Custom-Tower\"><strong>Making a Custom Tower</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Paragon\"><strong>Making a Custom Paragon</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Hero\"><strong>Making a Custom Hero</strong></a></p>\n<p><a href=\"/wiki/Appearing-in-the-Mod-Browser\"><strong>Appearing in the Mod Browser</strong></a></p>\n<p><a href=\"/wiki/Localization\">Localization</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Bloon\">Making a Custom Bloon</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Game-Mode\">Making a Custom Game Mode</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Round-Set\">Making a Custom Round Set</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Jukebox-Track\">Making a Custom Jukebox Track</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Artifact\">Making a Custom Artifact</a></p>\n<p><a href=\"/wiki/Custom-UI\">Custom UI (ModHelperComponents)</a></p>\n<p><a href=\"/wiki/Custom-Menu-Screens\">Custom Menu Screens</a></p>\n<p><a href=\"/wiki/Custom-Byte-Loaders\">Custom Byte Loaders</a></p>\n<h6 id=\"btd-modding-info\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#btd-modding-info\"><span class=\"icon icon-link\"></span></a>BTD Modding Info</h6>\n<p><a href=\"/wiki/BTD6-Internal-Structure\">BTD6 Internal Structure</a></p>\n<p><a href=\"/wiki/Looking-at-BTD6-Code-(Sorta)\">Looking at BTD6 Code (Sorta)</a></p>\n<p><a href=\"/wiki/IL2CPP-Is-Weird\">IL2CPP Is Weird</a></p>\n<p><a href=\"/wiki/Useful-Resources\">Useful Resources</a></p>\n<h6 id=\"mod-helper-utilities\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-utilities\"><span class=\"icon icon-link\"></span></a>Mod Helper Utilities</h6>\n<p><a href=\"/wiki/Using-Mod-Helper-Hooks\">Using Mod Helper Hooks</a></p>\n<p><a href=\"/wiki/ModContent\">ModContent</a></p>\n<p><a href=\"/wiki/Custom-Textures-and-Displays\">Custom Textures and Displays</a></p>\n<p><a href=\"/wiki/Mod-Settings\">In Game Mod Settings</a></p>\n<h6 id=\"extension-methods\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#extension-methods\"><span class=\"icon icon-link\"></span></a>Extension Methods</h6>\n<p><a href=\"/wiki/Common-Extension-Methods\">Common Extension Methods</a></p>\n<p><a href=\"/wiki/Array-extension-methods\">Array Extension Methods</a></p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#home\">Home</a></li><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#install-guide\">Install Guide</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#starting-btd-modding\">Starting BTD Modding</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-features\">Mod Helper Features</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#btd-modding-info\">BTD Modding Info</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-utilities\">Mod Helper Utilities</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#extension-methods\">Extension Methods</a></li></ol></li></ol></nav>"}},"__N_SSG":true}