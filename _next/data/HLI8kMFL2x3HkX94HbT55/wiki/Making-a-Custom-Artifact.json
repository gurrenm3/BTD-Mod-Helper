{"pageProps":{"data":{"contentHtml":"<p><strong>This guide assumes that you already have at least a basic knowledge of C#, and have set up a modding environment as\nexplained on this wiki.</strong></p>\n<p>Adding custom Artifacts that appear in the Rogue Legends game mode is done via creating classes that extend from\n<code class=\"hljs\">ModItemArtifact</code> for permanent in-game-affecting artifacts, <code class=\"hljs\">ModBoostArtifact</code> for temporary in-game-affecting\nartifacts, or<code class=\"hljs\">ModMapArtifact</code> for permanent out-of-game-affecting artifacts.\nAll of these classes extend from <code class=\"hljs\">ModArtifact</code> and have the same core methods and properties that should be overriden.</p>\n<h2 id=\"notes\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#notes\"><span class=\"icon icon-link\"></span></a>Notes</h2>\n<ul>\n<li>Each custom ModArtifact class you define will be creating the Common, Rare, and Legendary version; no separate classes\nfor each.</li>\n<li>For Item/Map Artifacts, users of your mod will have the artifacts automatically unlocked as starter options.\n<ul>\n<li>(They are not added to the unlock system to not leave any extraneous modded data in your profile)</li>\n</ul>\n</li>\n<li>Unlike many other <code class=\"hljs\">ModContent</code> types, <code class=\"hljs\">ModArtifacts</code> do not have a base artifact that they copy from. This is because\nunlike Towers, Heroes, Bloons, etc, Artifacts tend to have only 1-2 behaviors to make them work rather than many\nrequired boilerplate ones.</li>\n<li>Tier 0 Common, 1 is Rare, 2 is Legendary, but there are also consts defined within <code class=\"hljs\">ModArtifact</code> so you can just write\n<code class=\"hljs\">Common</code> / <code class=\"hljs\">Rare</code> / <code class=\"hljs\">Legendary</code> for the values</li>\n</ul>\n<h2 id=\"common-overrides\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#common-overrides\"><span class=\"icon icon-link\"></span></a>Common Overrides</h2>\n<p><code class=\"hljs\">ModifyArtifactModel(ArtifactModel artifactModel)</code>: This method is required for overriding and serves as the place where\nthe artifact's in-game behavior will be defined.\nIts <code class=\"hljs\">artifactModel</code> parameter will be either an <code class=\"hljs\">ItemArtifactModel</code> or <code class=\"hljs\">BoostArtifactModel</code>, and you should use Mod\nHelper's standardized <code class=\"hljs\">AddBehavior</code> extension methods to add artifact behaviors.\nThe <code class=\"hljs\">artifactModel.tier</code> will be populated with either 0 for Common, 1 for Rare, or 2 for Legendary, so use that to give\nthe different tiers different effects/values.\nTo see how the vanilla artifacts work, use the Export Game Model button in Mod Helper's settings and view the Artifacts\nfolder.</p>\n<p><code class=\"hljs\">DisplayName</code>: Override this property to change the displayed name of your artifact. The Common, Rare and Legendary\nsuffix will be automatically added for the different tiers, so do not include any of those here.</p>\n<p><code class=\"hljs\">DescriptionCommon</code>/<code class=\"hljs\">DescriptionRare</code>/<code class=\"hljs\">DescriptionLegendary</code> or <code class=\"hljs\">Description(int tier)</code>: To give your artifact its\ndifferent descriptions, either override the 3 Description properties separately or override the one Description method\nthat has the tier as the parameter. As above, the tier number is 0 for Common, 1 for Rare, or 2 for Legendary.</p>\n<p><code class=\"hljs\">Icon</code>: Override this property to give an Icon to your artifact using either <code class=\"hljs\">VanillaSprites</code> or the name of an included\ncustom png (without extension). Artifact Icons are typically 256x256, but primarily utilize the center 150x150 area.\nDefaults to your class name, so you don't need to override if your png file has the same name as your class file.</p>\n<p><code class=\"hljs\">RarityFrameType</code>: Override this property to change the frame this artifact frame has to a different tower set's theme.\nDefaults to <code class=\"hljs\">TowerSet.AllMonkeyTowerSets</code>.</p>\n<h2 id=\"other-overrides\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#other-overrides\"><span class=\"icon icon-link\"></span></a>Other Overrides</h2>\n<p><code class=\"hljs\">MinTier</code>: If you want your Artifact to start at a higher tier and not have lower ones set this value to 1 for Rare or 2\nfor Legendary. Default behavior is starting at Common.</p>\n<p><code class=\"hljs\">MaxTier</code>: Similarly, if you don't want your artifact to go all the way to Legendary you can override this to\n0 for Common or 1 for Rare. Default behavior is ending at Legendary.</p>\n<p><code class=\"hljs\">DisplayNameCommon</code>/<code class=\"hljs\">DisplayNameRare</code>/<code class=\"hljs\">DisplayNameLegendary</code>: If you don't want your artifact to follow the default\nCommon / Rare / Legendary naming convention that you can override these to change what the final Displayed Names will\nbe.</p>\n<p><code class=\"hljs\">IconCommon</code>/<code class=\"hljs\">IconRare</code>/<code class=\"hljs\">IconLegendary</code>: Individual overrides if you want to change the icon based on artifact rarity</p>\n<h2 id=\"examples\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#examples\"><span class=\"icon icon-link\"></span></a>Examples</h2>\n<p>Example of an item artifact that buffs Dart Monkeys. Also showcases using the AddBoostBehavior extension method for\nusing boost behaviors on a non-Boost artifact (works internally using <code class=\"hljs\">InvokeBoostBuffBehaviorModel</code>).</p>\n<pre><code class=\"hljs language-cs\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DartMonkeyEnjoyer</span> : <span class=\"hljs-title\">ModItemArtifact</span>\n{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> Icon => VanillaSprites.DartMonkeyIcon;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">int</span> MinTier => Rare;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> DescriptionRare => <span class=\"hljs-string\">\"Dart Monkeys do 25% more damage. All other towers do 5% less damage.\"</span>;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> DescriptionLegendary => <span class=\"hljs-string\">\"Dart Monkeys do 25% more damage.\"</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ModifyArtifactModel</span>(<span class=\"hljs-params\">ItemArtifactModel artifactModel</span>)</span>\n    {\n        artifactModel.AddBoostBehavior(<span class=\"hljs-keyword\">new</span> DamageBoostBehaviorModel(<span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-number\">1.25f</span>), boost =>\n        {\n            boost.towerTypes = <span class=\"hljs-keyword\">new</span>[] {TowerType.DartMonkey};\n        });\n\n        <span class=\"hljs-keyword\">if</span> (artifactModel.tier != Legendary)\n        {\n            artifactModel.AddBoostBehavior(<span class=\"hljs-keyword\">new</span> DamageBoostBehaviorModel(<span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-number\">0.95f</span>), boost =>\n            {\n                boost.towerTypes = <span class=\"hljs-keyword\">new</span>[] {TowerType.DartMonkey};\n                boost.inverseTowerTypes = <span class=\"hljs-literal\">true</span>;\n            });\n        }\n    }\n}\n</code></pre>\n<p>A different version that uses custom loading to create artifacts for all towers at once.</p>\n<pre><code class=\"hljs language-cs\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TowerEnjoyer</span> : <span class=\"hljs-title\">ModItemArtifact</span>\n{\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">string</span>[] AllTowers =\n    [\n        TowerType.DartMonkey, TowerType.TackShooter, TowerType.GlueGunner, TowerType.IceMonkey, TowerType.BombShooter,\n        TowerType.MonkeySub, TowerType.MonkeyBuccaneer, TowerType.SniperMonkey, TowerType.DartlingGunner, TowerType.MonkeyAce, TowerType.HeliPilot,\n        TowerType.WizardMonkey, TowerType.NinjaMonkey, TowerType.SuperMonkey, TowerType.Druid, TowerType.Alchemist, TowerType.Mermonkey,\n        TowerType.EngineerMonkey, TowerType.SpikeFactory\n    ];\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> TowerId { <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">init</span>; } = <span class=\"hljs-literal\">null</span>!;\n\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;summary></span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Automatically load a separate class for every tower</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;/summary></span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;returns></span><span class=\"hljs-doctag\">&#x3C;/returns></span></span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> IEnumerable&#x3C;ModContent> <span class=\"hljs-title\">Load</span>()</span> => AllTowers.Select(tower => <span class=\"hljs-keyword\">new</span> TowerEnjoyer {TowerId = tower});\n\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;summary></span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Unique internal name for each class</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;/summary></span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> Name => TowerId + <span class=\"hljs-string\">\"Enjoyer\"</span>;\n\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;summary></span></span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Utilize [bracket syntax] to get the localized names from their ids</span>\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;/summary></span></span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> DisplayName => <span class=\"hljs-string\">$\"[<span class=\"hljs-subst\">{TowerId}</span>] Enjoyer\"</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">Description</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> tier</span>)</span> => <span class=\"hljs-string\">$\"[<span class=\"hljs-subst\">{TowerId}</span>s] do <span class=\"hljs-subst\">{Damage(tier):P0}</span> increased damage.\"</span>;\n    \n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> SpriteReference IconReference => Game.instance.model.GetTowerWithName(TowerId).icon;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">float</span> <span class=\"hljs-title\">Damage</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> tier</span>)</span> => tier <span class=\"hljs-keyword\">switch</span>\n    {\n        Common => <span class=\"hljs-number\">.1</span>f,\n        Rare => <span class=\"hljs-number\">.15</span>f,\n        Legendary => <span class=\"hljs-number\">.25</span>f\n    };\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ModifyArtifactModel</span>(<span class=\"hljs-params\">ItemArtifactModel artifactModel</span>)</span>\n    {\n        artifactModel.AddBoostBehavior(<span class=\"hljs-keyword\">new</span> DamageBoostBehaviorModel(<span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-number\">1</span> + Damage(artifactModel.tier)), boost =>\n        {\n            boost.towerTypes = <span class=\"hljs-keyword\">new</span>[] {TowerId};\n        });\n    }\n}\n</code></pre>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#notes\">Notes</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#common-overrides\">Common Overrides</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#other-overrides\">Other Overrides</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#examples\">Examples</a></li></ol></nav>","title":"Making a Custom Artifact"},"sidebar":{"contentHtml":"<h5 id=\"home\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#home\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Home\">Home</a></h5>\n<h5 id=\"install-guide\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#install-guide\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Install-Guide\">Install Guide</a></h5>\n<h6 id=\"starting-btd-modding\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#starting-btd-modding\"><span class=\"icon icon-link\"></span></a>Starting BTD Modding</h6>\n<p><a href=\"/wiki/Prerequisites\">Prerequisites</a></p>\n<p><a href=\"/wiki/Getting-Started\">Getting Started</a></p>\n<h6 id=\"mod-helper-features\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-features\"><span class=\"icon icon-link\"></span></a>Mod Helper Features</h6>\n<p><a href=\"/wiki/Making-a-Custom-Tower\"><strong>Making a Custom Tower</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Paragon\"><strong>Making a Custom Paragon</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Hero\"><strong>Making a Custom Hero</strong></a></p>\n<p><a href=\"/wiki/Appearing-in-the-Mod-Browser\"><strong>Appearing in the Mod Browser</strong></a></p>\n<p><a href=\"/wiki/Localization\">Localization</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Bloon\">Making a Custom Bloon</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Game-Mode\">Making a Custom Game Mode</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Round-Set\">Making a Custom Round Set</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Jukebox-Track\">Making a Custom Jukebox Track</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Artifact\">Making a Custom Artifact</a></p>\n<p><a href=\"/wiki/Custom-UI\">Custom UI (ModHelperComponents)</a></p>\n<p><a href=\"/wiki/Custom-Menu-Screens\">Custom Menu Screens</a></p>\n<p><a href=\"/wiki/Custom-Byte-Loaders\">Custom Byte Loaders</a></p>\n<h6 id=\"btd-modding-info\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#btd-modding-info\"><span class=\"icon icon-link\"></span></a>BTD Modding Info</h6>\n<p><a href=\"/wiki/BTD6-Internal-Structure\">BTD6 Internal Structure</a></p>\n<p><a href=\"/wiki/Looking-at-BTD6-Code-(Sorta)\">Looking at BTD6 Code (Sorta)</a></p>\n<p><a href=\"/wiki/IL2CPP-Is-Weird\">IL2CPP Is Weird</a></p>\n<p><a href=\"/wiki/Useful-Resources\">Useful Resources</a></p>\n<h6 id=\"mod-helper-utilities\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-utilities\"><span class=\"icon icon-link\"></span></a>Mod Helper Utilities</h6>\n<p><a href=\"/wiki/Using-Mod-Helper-Hooks\">Using Mod Helper Hooks</a></p>\n<p><a href=\"/wiki/ModContent\">ModContent</a></p>\n<p><a href=\"/wiki/Custom-Textures-and-Displays\">Custom Textures and Displays</a></p>\n<p><a href=\"/wiki/Mod-Settings\">In Game Mod Settings</a></p>\n<h6 id=\"extension-methods\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#extension-methods\"><span class=\"icon icon-link\"></span></a>Extension Methods</h6>\n<p><a href=\"/wiki/Common-Extension-Methods\">Common Extension Methods</a></p>\n<p><a href=\"/wiki/Array-extension-methods\">Array Extension Methods</a></p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#home\">Home</a></li><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#install-guide\">Install Guide</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#starting-btd-modding\">Starting BTD Modding</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-features\">Mod Helper Features</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#btd-modding-info\">BTD Modding Info</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-utilities\">Mod Helper Utilities</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#extension-methods\">Extension Methods</a></li></ol></li></ol></nav>"}},"__N_SSG":true}