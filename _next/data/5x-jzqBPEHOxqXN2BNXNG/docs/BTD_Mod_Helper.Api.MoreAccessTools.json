{"pageProps":{"data":{"contentHtml":"<h4 id=\"bloonstd6-mod-helper\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#bloonstd6-mod-helper\"><span class=\"icon icon-link\"></span></a><a href=\"README\" title=\"README\">BloonsTD6 Mod Helper</a></h4>\n<h3 id=\"btd_mod_helperapi\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#btd_mod_helperapi\"><span class=\"icon icon-link\"></span></a><a href=\"README#BTD_Mod_Helper.Api\" title=\"BTD_Mod_Helper.Api\">BTD_Mod_Helper.Api</a></h3>\n<h2 id=\"moreaccesstools-class\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#moreaccesstools-class\"><span class=\"icon icon-link\"></span></a>MoreAccessTools Class</h2>\n<p>Further methods along the lines of Harmony's <a href=\"https://docs.microsoft.com/en-us/dotnet/api/HarmonyLib.AccessTools\" title=\"HarmonyLib.AccessTools\">HarmonyLib.AccessTools</a></p>\n<pre><code class=\"hljs language-csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MoreAccessTools</span>\n</code></pre>\n<p>Inheritance <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Object\" title=\"System.Object\">System.Object</a> ï¡’ MoreAccessTools</p>\n<h3 id=\"methods\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#methods\"><span class=\"icon icon-link\"></span></a>Methods</h3>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.SafeGetNestedClassMethod(System.Type,string,string,int)\"></a></p>\n<h2 id=\"moreaccesstoolssafegetnestedclassmethodtype-string-string-int-method\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#moreaccesstoolssafegetnestedclassmethodtype-string-string-int-method\"><span class=\"icon icon-link\"></span></a>MoreAccessTools.SafeGetNestedClassMethod(Type, string, string, int) Method</h2>\n<p>Safely gets the MethodInfo for a method within a nested class. This is recommended to use because over<br>\ndirectly targeting it with typeof and nameof because the nested class names can change randomly.</p>\n<pre><code class=\"hljs language-csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> System.Reflection.<span class=\"hljs-function\">MethodInfo <span class=\"hljs-title\">SafeGetNestedClassMethod</span>(<span class=\"hljs-params\">System.Type outerType, <span class=\"hljs-built_in\">string</span> nestedTypeName, <span class=\"hljs-built_in\">string</span> methodName=<span class=\"hljs-string\">\"MoveNext\"</span>, <span class=\"hljs-built_in\">int</span> index=<span class=\"hljs-number\">0</span></span>)</span>;\n</code></pre>\n<h4 id=\"parameters\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#parameters\"><span class=\"icon icon-link\"></span></a>Parameters</h4>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.SafeGetNestedClassMethod(System.Type,string,string,int).outerType\"></a></p>\n<p><code class=\"hljs\">outerType</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Type\" title=\"System.Type\">System.Type</a></p>\n<p>The outer type whose name won't change</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.SafeGetNestedClassMethod(System.Type,string,string,int).nestedTypeName\"></a></p>\n<p><code class=\"hljs\">nestedTypeName</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.String\" title=\"System.String\">System.String</a></p>\n<p>The name of nested type, not including the _s</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.SafeGetNestedClassMethod(System.Type,string,string,int).methodName\"></a></p>\n<p><code class=\"hljs\">methodName</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.String\" title=\"System.String\">System.String</a></p>\n<p>The desired method name within the nested type</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.SafeGetNestedClassMethod(System.Type,string,string,int).index\"></a></p>\n<p><code class=\"hljs\">index</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Int32\" title=\"System.Int32\">System.Int32</a></p>\n<p>If multiple nested classes share a name portion, use the one at this index, default 0</p>\n<h4 id=\"returns\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#returns\"><span class=\"icon icon-link\"></span></a>Returns</h4>\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Reflection.MethodInfo\" title=\"System.Reflection.MethodInfo\">System.Reflection.MethodInfo</a><br>\nThe MethodInfo, or null alongside a console warning if one couldn't be found</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int)\"></a></p>\n<h2 id=\"moreaccesstoolstrygetnestedclassmethodtype-string-string-methodinfo-int-method\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#moreaccesstoolstrygetnestedclassmethodtype-string-string-methodinfo-int-method\"><span class=\"icon icon-link\"></span></a>MoreAccessTools.TryGetNestedClassMethod(Type, string, string, MethodInfo, int) Method</h2>\n<p>Safely gets the MethodInfo for a method within a nested class. This is recommended to use because over<br>\ndirectly targeting it with typeof and nameof because the nested class names can change randomly.</p>\n<pre><code class=\"hljs language-csharp\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">TryGetNestedClassMethod</span>(<span class=\"hljs-params\">System.Type outerType, <span class=\"hljs-built_in\">string</span> nestedClassName, <span class=\"hljs-built_in\">string</span> methodName, <span class=\"hljs-keyword\">out</span> System.Reflection.MethodInfo method, <span class=\"hljs-built_in\">int</span> index=<span class=\"hljs-number\">0</span></span>)</span>;\n</code></pre>\n<h4 id=\"parameters-1\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#parameters-1\"><span class=\"icon icon-link\"></span></a>Parameters</h4>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int).outerType\"></a></p>\n<p><code class=\"hljs\">outerType</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Type\" title=\"System.Type\">System.Type</a></p>\n<p>The outer type whose name won't change</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int).nestedClassName\"></a></p>\n<p><code class=\"hljs\">nestedClassName</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.String\" title=\"System.String\">System.String</a></p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int).methodName\"></a></p>\n<p><code class=\"hljs\">methodName</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.String\" title=\"System.String\">System.String</a></p>\n<p>The desired method name within the nested type</p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int).method\"></a></p>\n<p><code class=\"hljs\">method</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Reflection.MethodInfo\" title=\"System.Reflection.MethodInfo\">System.Reflection.MethodInfo</a></p>\n<p><a name=\"BTD_Mod_Helper.Api.MoreAccessTools.TryGetNestedClassMethod(System.Type,string,string,System.Reflection.MethodInfo,int).index\"></a></p>\n<p><code class=\"hljs\">index</code> <a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Int32\" title=\"System.Int32\">System.Int32</a></p>\n<p>If multiple nested classes share a name portion, use the one at this index, default 0</p>\n<h4 id=\"returns-1\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"\" href=\"#returns-1\"><span class=\"icon icon-link\"></span></a>Returns</h4>\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/System.Boolean\" title=\"System.Boolean\">System.Boolean</a><br>\nThe MethodInfo, or null alongside a console warning if one couldn't be found</p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#bloonstd6-mod-helper\">BloonsTD6 Mod Helper</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#btd_mod_helperapi\">BTD_Mod_Helper.Api</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#moreaccesstools-class\">MoreAccessTools Class</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#methods\">Methods</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#moreaccesstoolssafegetnestedclassmethodtype-string-string-int-method\">MoreAccessTools.SafeGetNestedClassMethod(Type, string, string, int) Method</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#parameters\">Parameters</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#returns\">Returns</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#moreaccesstoolstrygetnestedclassmethodtype-string-string-methodinfo-int-method\">MoreAccessTools.TryGetNestedClassMethod(Type, string, string, MethodInfo, int) Method</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#parameters-1\">Parameters</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#returns-1\">Returns</a></li></ol></li></ol></nav>","title":"BTD_Mod_Helper.Api.MoreAccessTools"}},"__N_SSG":true}