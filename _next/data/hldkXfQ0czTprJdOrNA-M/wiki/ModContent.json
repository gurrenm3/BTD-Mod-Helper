{"pageProps":{"data":{"contentHtml":"<h2 id=\"overview\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#overview\"><span class=\"icon icon-link\"></span></a>Overview</h2>\n<p>The <code class=\"hljs\">ModContent</code> class was added by the Mod Helper to manage the different custom elements of people's mods that the helper loads, like <code class=\"hljs\">ModTower</code>, <code class=\"hljs\">ModUpgrade</code>, <code class=\"hljs\">ModDisplay</code>, etc.</p>\n<p>All the different <code class=\"hljs\">ModContent</code> classes that you put in your mod will be automatically handled by the Mod Helper, which included being given a unique internal ID so that you don't have to worry about overlap with other mods.</p>\n<p>Because of this, the <code class=\"hljs\">ModContent</code> class comes with many static methods that you can use to access the different loaded elements.</p>\n<h2 id=\"helpeful-methods\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#helpeful-methods\"><span class=\"icon icon-link\"></span></a>Helpeful Methods</h2>\n<p><code class=\"hljs\">ModContent.GetInstance&#x3C;T>()</code> gets the primary instance of the type <code class=\"hljs\">T</code>, which is either a <code class=\"hljs\">ModContent</code> or a <code class=\"hljs\">BloonsMod</code>. For those new to C# this might seem a little odd, but the gist of why we do this is because we want to let people use Method and Property overrides while still having the classes behave pretty much statically.</p>\n<p><code class=\"hljs\">ModContent.TowerID&#x3C;T>()</code> and <code class=\"hljs\">ModContent.UpgradeID&#x3C;T>()</code> get the internal IDs given to a <code class=\"hljs\">ModTower</code> or <code class=\"hljs\">ModUpgrade</code> by the Mod Helper.</p>\n<p><code class=\"hljs\">ModContent.GetTextureGUID&#x3C;T>(string name)</code>, <code class=\"hljs\">ModContent.GetSpriteReference&#x3C;T>(string name)</code>, <code class=\"hljs\">ModContent.GetTexture&#x3C;T>(string name)</code>, <code class=\"hljs\">ModContent.GetSprite&#x3C;T>(string name)</code> all help get your custom texture(s) in various formats you might want them in. You can read more about that <a href=\"/wiki/Custom-Textures-and-Displays\">here</a>.</p>\n<p>Also note that since all the classes like <code class=\"hljs\">ModTower</code> are subclasses of <code class=\"hljs\">ModContent</code>, you can use all the above methods without putting <code class=\"hljs\">ModContent.</code> at the start with those classes.</p>\n<h2 id=\"loading-multiple-versions-of-a-single-modcontent\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#loading-multiple-versions-of-a-single-modcontent\"><span class=\"icon icon-link\"></span></a>Loading Multiple Versions of a Single ModContent</h2>\n<p>Note: this is an advanced feature that many people may never need to use.</p>\n<p>Sometimes you might want to make many different versions of a very similar bit of <code class=\"hljs\">ModContent</code>. Instead of having to manually make a bunch of files, you can override the <code class=\"hljs\">Load()</code> method in your ModContent. This is probably best illustrated with an example:</p>\n<pre><code class=\"hljs language-cs\"> <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CardMonkeyBaseDisplay</span> : <span class=\"hljs-title\">ModTowerDisplay</span>&#x3C;<span class=\"hljs-title\">CardMonkey</span>>\n {\n     <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">int</span>[] t;  <span class=\"hljs-comment\">// the tiers for a specific display</span>\n     \n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;summary></span></span>\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> All classes that derive from ModContent MUST still have a zero argument constructor to work</span>\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;/summary></span></span>\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CardMonkeyBaseDisplay</span>()</span>\n     {\n         \n     }\n\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CardMonkeyBaseDisplay</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span>[] tiers</span>)</span>\n     {\n         t = tiers;\n     }\n\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;summary></span></span>\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> This is an example of loading multiple instances of the same ModDisplay with different values</span>\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;/summary></span></span>\n     <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&#x3C;returns></span><span class=\"hljs-doctag\">&#x3C;/returns></span></span>\n     <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> IEnumerable&#x3C;ModContent> <span class=\"hljs-title\">Load</span>()</span>\n     {\n         <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &#x3C;= <span class=\"hljs-number\">2</span>; i++)\n         {\n             <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> j = <span class=\"hljs-number\">0</span>; j &#x3C;= <span class=\"hljs-number\">2</span>; j++)\n             {\n                 <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> k = <span class=\"hljs-number\">0</span>; k &#x3C;= <span class=\"hljs-number\">2</span>; k++)\n                 {\n                     <span class=\"hljs-keyword\">var</span> tiers = <span class=\"hljs-keyword\">new</span>[] {i, j, k};\n                     <span class=\"hljs-keyword\">if</span> (tiers.IsValid())\n                     {\n                         <span class=\"hljs-function\"><span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title\">CardMonkeyBaseDisplay</span>(<span class=\"hljs-params\">tiers</span>)</span>;\n                     }\n                 }\n             }\n         }\n     }\n     \n     <span class=\"hljs-comment\">/* Using the t value for various overrides */</span>\n}\n</code></pre>\n<p>Now the Mod Helper will create a <code class=\"hljs\">CardMonkeyBaseDisplay</code> for all valid tier 2 or lower crosspaths.</p>\n<p>Note that if you do this, you'll then have to use <code class=\"hljs\">ModContent.GetInstances&#x3C;T>()</code> for getting ALL instances of your <code class=\"hljs\">ModContent</code> and not just the first one.</p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#overview\">Overview</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#helpeful-methods\">Helpeful Methods</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#loading-multiple-versions-of-a-single-modcontent\">Loading Multiple Versions of a Single ModContent</a></li></ol></nav>","title":"ModContent"},"sidebar":{"contentHtml":"<h5 id=\"home\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#home\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Home\">Home</a></h5>\n<h5 id=\"install-guide\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#install-guide\"><span class=\"icon icon-link\"></span></a><a href=\"/wiki/Install-Guide\">Install Guide</a></h5>\n<h6 id=\"starting-btd-modding\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#starting-btd-modding\"><span class=\"icon icon-link\"></span></a>Starting BTD Modding</h6>\n<p><a href=\"/wiki/Prerequisites\">Prerequisites</a></p>\n<p><a href=\"/wiki/Getting-Started\">Getting Started</a></p>\n<h6 id=\"mod-helper-features\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-features\"><span class=\"icon icon-link\"></span></a>Mod Helper Features</h6>\n<p><a href=\"/wiki/Making-a-Custom-Tower\"><strong>Making a Custom Tower</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Paragon\"><strong>Making a Custom Paragon</strong></a></p>\n<p><a href=\"/wiki/Making-a-Custom-Hero\"><strong>Making a Custom Hero</strong></a></p>\n<p><a href=\"/wiki/Appearing-in-the-Mod-Browser\"><strong>Appearing in the Mod Browser</strong></a></p>\n<p><a href=\"/wiki/Localization\">Localization</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Bloon\">Making a Custom Bloon</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Game-Mode\">Making a Custom Game Mode</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Round-Set\">Making a Custom Round Set</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Jukebox-Track\">Making a Custom Jukebox Track</a></p>\n<p><a href=\"/wiki/Making-a-Custom-Artifact\">Making a Custom Artifact</a></p>\n<p><a href=\"/wiki/Custom-UI\">Custom UI (ModHelperComponents)</a></p>\n<p><a href=\"/wiki/Custom-Menu-Screens\">Custom Menu Screens</a></p>\n<p><a href=\"/wiki/Custom-Byte-Loaders\">Custom Byte Loaders</a></p>\n<h6 id=\"btd-modding-info\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#btd-modding-info\"><span class=\"icon icon-link\"></span></a>BTD Modding Info</h6>\n<p><a href=\"/wiki/BTD6-Internal-Structure\">BTD6 Internal Structure</a></p>\n<p><a href=\"/wiki/Looking-at-BTD6-Code-(Sorta)\">Looking at BTD6 Code (Sorta)</a></p>\n<p><a href=\"/wiki/IL2CPP-Is-Weird\">IL2CPP Is Weird</a></p>\n<p><a href=\"/wiki/Useful-Resources\">Useful Resources</a></p>\n<h6 id=\"mod-helper-utilities\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#mod-helper-utilities\"><span class=\"icon icon-link\"></span></a>Mod Helper Utilities</h6>\n<p><a href=\"/wiki/Using-Mod-Helper-Hooks\">Using Mod Helper Hooks</a></p>\n<p><a href=\"/wiki/ModContent\">ModContent</a></p>\n<p><a href=\"/wiki/Custom-Textures-and-Displays\">Custom Textures and Displays</a></p>\n<p><a href=\"/wiki/Mod-Settings\">In Game Mod Settings</a></p>\n<p><a href=\"/wiki/ModHooks\">Mod Hooks</a></p>\n<h6 id=\"extension-methods\"><a aria-hidden=\"true\" tabindex=\"-1\" class=\"position-relative\" href=\"#extension-methods\"><span class=\"icon icon-link\"></span></a>Extension Methods</h6>\n<p><a href=\"/wiki/Common-Extension-Methods\">Common Extension Methods</a></p>\n<p><a href=\"/wiki/Array-extension-methods\">Array Extension Methods</a></p>","tableOfContentsHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#home\">Home</a></li><li class=\"toc-item toc-item-h5\"><a class=\"toc-link toc-link-h5\" href=\"#install-guide\">Install Guide</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#starting-btd-modding\">Starting BTD Modding</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-features\">Mod Helper Features</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#btd-modding-info\">BTD Modding Info</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#mod-helper-utilities\">Mod Helper Utilities</a></li><li class=\"toc-item toc-item-h6\"><a class=\"toc-link toc-link-h6\" href=\"#extension-methods\">Extension Methods</a></li></ol></li></ol></nav>"}},"__N_SSG":true}